{"./":{"url":"./","title":"前言","keywords":"","body":"网络中转站：代理技术 最新版本：v0.7 更新时间：20201228 简介 总结应用广泛的网络中转技术，代理技术。总结代理的常见目的，比如实现加速下载、科学上网、爬取信息等。介绍代码相关通用知识，包括常见代理技术种类，常用代理工具，安装根证书，以及购买代理相关的基础周知识，比如代理池、私密代理vs隧道代理、扫描vs非扫描、是否去重、多个请求锁定一个IP、每秒请求次数、认证方式、代理IP检测、免费试用等，以及常见代理服务商公司，比如阿布云代理、多贝云代理等。介绍如何设置添加代理，包括各种编程语言，尤其是Python中的requests等，和常见开发工具中，比如git、pip、Android Studio、gradle、rsync、SecureCRT等，以及移动端的iOS和Android，桌面端的Mac和Windows等等。 源码+浏览+下载 本书的各种源码、在线浏览地址、多种格式文件下载如下： Gitbook源码 crifan/web_transfer_proxy_tech: 网络中转站：代理技术 如何使用此Gitbook源码去生成发布为电子书 详见：crifan/gitbook_template: demo how to use crifan gitbook template and demo 在线浏览 网络中转站：代理技术 book.crifan.com 网络中转站：代理技术 crifan.github.io 离线下载阅读 网络中转站：代理技术 PDF 网络中转站：代理技术 ePub 网络中转站：代理技术 Mobi 版权说明 此电子书教程的全部内容，如无特别说明，均为本人原创和整理。其中部分内容参考自网络，均已备注了出处。如有发现侵犯您版权，请通过邮箱联系我 admin 艾特 crifan.com，我会尽快删除。谢谢合作。 鸣谢 感谢我的老婆陈雪的包容理解和悉心照料，才使得我crifan有更多精力去专注技术专研和整理归纳出这些电子书和技术教程，特此鸣谢。 更多其他电子书 本人crifan还写了其他100+本电子书教程，感兴趣可移步至： crifan/crifan_ebook_readme: Crifan的电子书的使用说明 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:52:38 "},"proxy_overview/":{"url":"proxy_overview/","title":"代理概述","keywords":"","body":"代理概述 代理 英文：proxy 中文 直译：代（替你去处）理 含义：通过一个中转站去处理某些事情 思考：为何需要中转站？ 答：实现某些目的 提高（下载文件等）速度 （作为中国人）访问（没有经过中转就无法打开的）国外的技术网站 其他方面用途 代理的典型用途 爬虫 反反扒 模拟不同IP多人同时访问 破解 安卓 绕过https证书检测 科学上网 =翻墙 访问被禁国外技术网站 加速 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:48:20 "},"proxy_common/":{"url":"proxy_common/","title":"代理通用知识","keywords":"","body":"代理通用知识 此处介绍代理的通用知识。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:48:04 "},"proxy_common/protocol.html":{"url":"proxy_common/protocol.html","title":"代理协议种类","keywords":"","body":"代理协议种类 常见代理协议种类 http https socks 协议 SOCKS4 SOCKS5 SOCKS代理 只是单纯传递数据包，不关心具体协议和用法，所以速度快很多 端口一般为：1080 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:48:00 "},"proxy_common/tool.html":{"url":"proxy_common/tool.html","title":"常用代理工具","keywords":"","body":"常用代理工具 常用代理工具 抓包工具类 Charles app抓包利器：Charles mitmproxy 抓包代理利器：mitmproxy wireshark 科学上网工具类 协议版本 Shadowsocks V2Ray Trojan 代理模式和对应代理地址 http http://127.0.0.1:1086 https https://127.0.0.1:1086 socks5 socks5://127.0.0.1:1086 PAC自动代理 http://127.0.0.1:8070/proxy.pac crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:48:15 "},"proxy_common/root_cert.html":{"url":"proxy_common/root_cert.html","title":"安装根证书","keywords":"","body":"安装根证书 安装根证书 安装代理证书 给Charles安装根证书 给mitmproxy安装根证书 通用逻辑 pc端 开启代理 移动端 给WiFi加上代理 用浏览器访问网址下载代理证书 访问网址 Charles地址 http://chls.pro/ssl mitmproxy地址 http://mitm.it 如果没给WiFi加代理则会提示 if you can see this, traffic is not passing through mitmproxy 证书文件 正常时 Charles: charles-proxy-ssl-proxying-certificate.pem 有时是: getssl.crt mitmproxy: mitmproxy-ca-cert.pem 异常时：无法下载 Charles: downloadfile.crt mitmproxy: perm.crt crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:48:11 "},"proxy_common/bug_proxy/":{"url":"proxy_common/bug_proxy/","title":"购买代理","keywords":"","body":"购买代理 如果做爬虫，可以考虑通过买别人的代理，实现动态IP等功能，实现反扒效果。 目前市场上有多家代理公司，卖各种代理服务。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:54 "},"proxy_common/bug_proxy/basic/":{"url":"proxy_common/bug_proxy/basic/","title":"基础知识","keywords":"","body":"基础知识 此处购买代理服务之前，需要了解的一些常用的基础知识。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:38 "},"proxy_common/bug_proxy/basic/ip_proxy_pool.html":{"url":"proxy_common/bug_proxy/basic/ip_proxy_pool.html","title":"IP代理池","keywords":"","body":"IP代理池 IP代理池，顾名思义，就像一个水池，，其中放了很多可用的代理IP地址，供需要时取用。 此处往往指的是，你所购买的代理服务、代理套餐，在提供随机动态的IP时，就像有个池子一样，有大量的IP放在里面可供选用，所以叫做：IP池=代理池=IP代理池 所以此时不同提供商会有个指标叫做：IP池的量 比如： 套餐购买-芝麻软件 每日40万IP 蘑菇代理 - 购买API代理 每日15万高匿名IP 当然，相对来说，代理池的IP个数越多，使用起来越好，越容易起到反扒效果。 与之相关，还会有切换IP的策略： 比如： 专业版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 如果全局 IP池 中有当前隧道当天未被使用过的 IP，则从未使用过的 IP 中随机挑选一个； 如果全局 IP池 中的 IP 都曾被使用过，则从全局 IP池 中随机挑选 IP。 不同隧道可能会拿到相同的 IP，如果使用者的应用对重复 IP 敏感，需要在应用中自行做 IP 过滤。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:12 "},"proxy_common/bug_proxy/basic/private_vs_tunnel.html":{"url":"proxy_common/bug_proxy/basic/private_vs_tunnel.html","title":"私密代理vs隧道代理","keywords":"","body":"私密代理 vs 隧道代理 在一些IP代理池提供商中看到了： 私密代理IP 隧道代理IP 比如： 蜻蜓代理 - 企业级高质量代理ip平台 蘑菇代理 - 购买API代理 动态版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 动态版 HTTP隧道 好像没太明白： IP代理池，都是动态的IP 但是 私密 vs 隧道 是什么区别？ 再自己看解释：看懂了： 蜻蜓代理 文档 购买私密代理 - 蜻蜓代理 - 企业级高质量代理ip平台 购买隧道代理 - 蜻蜓代理 - 企业级高质量代理ip平台 含义 私密代理 通过API提取IP 全部代理高匿名，白名单地址绑定，每天最高40万IP 隧道代理 统一入口，随机动态IP 专为爬虫采集业务而定制 蘑菇代理 文档 购买 蘑菇代理 - 购买API代理 HTTP 蘑菇代理 - 购买API代理 帮助信息 蘑菇代理 - 购买API代理 含义 私密API代理 通过API提取IP 请求API接口，直接返回IP与端口 HTTP隧道代理(动态转发) 统一入口，随机动态出口，每一个请求一个随机IP 接入固定代理服务器，动态转发请求 总结： 私密代理=私密API代理=私密代理API 获取动态IP方式：通过API获取代理服务器的信息（IP和端口） 使用方式：你调用api接口获取到IP和端口，自己用IP和端口去代理试用 后来也才看懂 大象代理IP提取-IP地址购买-API-代理服务器提取购买 中的： API返回格式：文本 API是否返回地区 API是否返回运营商 购买代理 - 快代理 中的： API最快调用频率 1秒10次 API允许调用IP数 2个起 API支持返回json, xml 短效优质代理IP- 站大爷 中的： 每次提取IP数：5个 说的就是： 你自己：去调用api 返回 的内容：IP地址列表 即一次性往往会返回多个IP地址 比如5个，10个，100个等等 格式：xml/json/txt 且你调用API接口的频率也不能太高 比如最多10次/秒 HTTP隧道代理 获取动态IP方式：通过http代理提取 此处的 http代理=HTTP隧道=HTTP隧道代理=服务商提供的一个HTTP代理服务器 可以动态的，根据不同请求，内部使用不同IP 使用方法：配置好HTTP（隧道）代理服务器后，后续请求，先到HTTP代理服务器，内部会自动的使用动态的IP转发请求 适合爬虫采集 HTTP隧道代理 IP代理 根据协议，分很多种： HTTP/HTTPS SOCKS 等等 其中用HTTP协议的隧道代理，叫HTTP隧道代理 比如： HTTP隧道产品 | 阿布云 - 为大数据赋能 讯代理-爬虫代理-HTTP代理-代理服务器 多贝云|动态IP代理拨号代理VPN代理动态HTTP代理 用图解释就更容易懂了： crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:21 "},"proxy_common/bug_proxy/basic/scan_vs_non_scan.html":{"url":"proxy_common/bug_proxy/basic/scan_vs_non_scan.html","title":"扫描vs非扫描","keywords":"","body":"扫描vs非扫描 关于代理的IP的来源： 扫描的 很多都是免费的，不要钱的 所以往往是从网络上，通过扫描，搜集得到的 所以质量和稳定性一般不是很高 非扫描的 所以很多收费的，质量好的 都不是从网上扫描得到的 而是自建节点的 所以稳定、速度等质量都相对更好些 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:49 "},"proxy_common/bug_proxy/basic/remove_duplicated.html":{"url":"proxy_common/bug_proxy/basic/remove_duplicated.html","title":"是否去重","keywords":"","body":"是否去重 对于有些业务，可能会要去发出的请求，不能有重复的IP 对此，IP代理提供商，有的确保IP不重复，有的不确保，需要你自己过滤和去重。 比如： 套餐购买 - 芝麻HTTP代理 永久去重 永远不会用到重复的IP 就不需要自己再去去重。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:42 "},"proxy_common/bug_proxy/basic/multi_req_same_ip.html":{"url":"proxy_common/bug_proxy/basic/multi_req_same_ip.html","title":"多个请求锁定一个IP","keywords":"","body":"多个请求锁定一个IP 动态版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 产品说明 HTTP隧道 基于 HTTP 协议，支持 HTTP/HTTPS 协议的数据接入 平台在云端维护一个全局 IP池 供 HTTP隧道 使用，池中的 IP 会不间断更新，以保证 IP池 中有足够多的 IP 供用户使用。 需要注意的是 IP池 中有部分 IP 可能会在当天重复出现多次。 动态版 HTTP隧道 会为每个请求从 IP池 中挑选一个随机 IP。 然后再仔细看，才懂： HTTP隧道产品 | 阿布云 - 为大数据赋能 每个请求一个随机IP 每次http请求，IP都不同 多个请求锁定一个IP 每几次连续的IP池的请求，或者说每一段时间内的请求，IP是一样的 典型的是，对应的是： 比如 专业版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 每一个 IP 从隧道切换至该 IP 开始计时，最多只能使用 1 分钟，到期后系统将强制切换到另一个 IP 就是说：每1分钟内的请求，都是同一个IP 更深入的解释相关内容 两次手动切换 IP 的间隔时间不得少于 1 秒 指的是：如果支持手动切换IP（某些套餐才支持，有些不支持）的话，（调用api去）切换IP时，不能太频繁，间隔不能小于1秒 但是对于更多的请求来说，IP是变化的 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:17 "},"proxy_common/bug_proxy/basic/req_num_per_sec.html":{"url":"proxy_common/bug_proxy/basic/req_num_per_sec.html","title":"每秒请求次数","keywords":"","body":"每秒请求次数 很多代理提供商（的不同套餐）都有提到：每秒请求次数 即：每秒的请求，不能超过几次 比如： 动态版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 动态版 HTTP隧道 有并发请求限制，默认每秒只允许 5 个请求 如果需要更多请求数，请额外购买 多贝云|动态IP代理拨号代理VPN代理动态HTTP代理 单账号每秒请求数默认10个，可以升级到100个 意味着： 比如此处的PySpider中的rate/burst 中的表示每秒几个请求的rate，不能超过上面的限制 即：此处rate如果设置了超过买的套餐的次数限制，后续请求会报错 429 Too many requests 就像这里的解释： 多贝云|动态IP代理拨号代理VPN代理动态HTTP代理 一秒内发起的所有请求数之和，如果超出套餐限制的值，那么多出的部分会被拒绝访问（提示429 Too many requests!），这时候需要购买更多的请求数以满足业务需求 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:45 "},"proxy_common/bug_proxy/basic/auth_method.html":{"url":"proxy_common/bug_proxy/basic/auth_method.html","title":"认证方式","keywords":"","body":"认证方式 IP代理中的认证方式，常见的有几种。 此处介绍最简单最基本的： HTTP基本认证 另外，也从： 隧道代理接入文档 | 蜻蜓代理 - 企业级高质量代理ip平台 目前，我们使用的是 HTTP基本认证，在发送请求中，添加Proxy-Authorization头部，值为：Basic b64encode(\"username:password\")。 得知了，此处一般IP代理提供商的认证方式，都是用的是： Http Basic Authentication=Http基本认证 -》最通用，也相对最简单的方式 -》所以其他很多http方面的库，比如Python的requests，也才会（内置就）支持 所以示例代码中： https://github.com/dobelgit/dobelcloud/blob/master/Python/PythonRequestsDemo.py #! -*- encoding:utf-8 -*- import requests #目标网址 targetUrl = \"https://www.taobao.com/help/getip.php\" #http代理接入服务器地址端口 proxyHost = \"域名\" proxyPort = \"端口\" #账号密码 proxyUser = \"账号\" proxyPass = \"密码\" proxyMeta = \"http://%(user)s:%(pass)s@%(host)s:%(port)s\" % { \"host\" : proxyHost, \"port\" : proxyPort, \"user\" : proxyUser, \"pass\" : proxyPass, } proxies = { \"http\" : proxyMeta, \"https\" : proxyMeta, } result = requests.get(targetUrl, proxies=proxies) print result.status_code print result.text 只需要传递参数，无需手动自己算base64编码等过程了 后续发现其他IP代理服务的认证也是这个种方式： 蘑菇代理 - 购买API代理 其他的也是： 动态版HTTP隧道接入指南 | 阿布云 - 为大数据赋能 -》示例代码都是一样的： abuyun/proxy-demo: abuyun cloud proxy demo HTTP隧道（动态版）Python 接入指南| 阿布云 - 为大数据赋能 #! -*- encoding:utf-8 -*- import requests # 要访问的目标页面 targetUrl = \"http://test.abuyun.com\" #targetUrl = \"http://proxy.abuyun.com/switch-ip\" #targetUrl = \"http://proxy.abuyun.com/current-ip\" # 代理服务器 proxyHost = \"http-dyn.abuyun.com\" proxyPort = \"9020\" # 代理隧道验证信息 proxyUser = \"H01234567890123D\" proxyPass = \"0123456789012345\" proxyMeta = \"http://%(user)s:%(pass)s@%(host)s:%(port)s\" % { \"host\" : proxyHost, \"port\" : proxyPort, \"user\" : proxyUser, \"pass\" : proxyPass, } proxies = { \"http\" : proxyMeta, \"https\" : proxyMeta, } resp = requests.get(targetUrl, proxies=proxies) print resp.status_code print resp.text crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:05 "},"proxy_common/bug_proxy/basic/proxy_ip_detect.html":{"url":"proxy_common/bug_proxy/basic/proxy_ip_detect.html","title":"代理IP检测","keywords":"","body":"代理IP检测 另外，对于如何查看到自己当前的IP，可以用： dobelcloud/PythonRequestsDemo.py at master · dobelgit/dobelcloud 提到的： https://www.taobao.com/help/getip.php 得到： ipCallback({ip:\"222.92.130.218\"}) 或： 隧道代理接入文档 | 蜻蜓代理 - 企业级高质量代理ip平台 提到的： https://proxy.horocn.com/api/ip 222.92.130.218 代码测试IP是否相同 在买了动态IP代理后，希望搞清楚是否生效，即每次获取的IP是否的确不同，可以自己写代码测试。 下面是我的测试代码，以阿布云的代理为例，供参考： # test proxy IP import requests #目标网址 targetUrl = \"http://httpbin.org/get\" # targetUrl = \"http://test.abuyun.com\" # targetUrl = \"https://www.taobao.com/help/getip.php\" # targetUrl = \"http://proxy.abuyun.com/switch-ip\" # targetUrl = \"http://proxy.abuyun.com/current-ip\" #http代理接入服务器地址端口 proxyHost = \"http-dyn.abuyun.com\" proxyPort = \"9020\" #账号密码 proxyUser = \"password1\" proxyPass = \"password2\" proxyMeta = \"http://%(user)s:%(pass)s@%(host)s:%(port)s\" % { \"host\" : proxyHost, \"port\" : proxyPort, \"user\" : proxyUser, \"pass\" : proxyPass, } proxies = { \"http\" : proxyMeta, \"https\" : proxyMeta, } result = requests.get(targetUrl, proxies=proxies) # result = requests.get(targetUrl) print(\"result=%s\" % result) print(\"result.status_code=%s\" % result.status_code) print(\"result.text=%s\" % result.text) 效果是所希望的，正常的，每次IP都不同： result= result.status_code=200 result.text={ \"args\": {}, \"headers\": { \"Accept\": \"*/*\", \"Accept-Encoding\": \"gzip\", \"Host\": \"httpbin.org\", \"User-Agent\": \"python-requests/2.19.1\" }, \"origin\": \"122.241.53.5, 122.241.53.5\", \"url\": \"https://httpbin.org/get\" } result= result.status_code=200 result.text={ \"args\": {}, \"headers\": { \"Accept\": \"*/*\", \"Accept-Encoding\": \"gzip\", \"Host\": \"httpbin.org\", \"User-Agent\": \"python-requests/2.19.1\" }, \"origin\": \"175.169.245.67, 175.169.245.67\", \"url\": \"https://httpbin.org/get\" } result= result.status_code=200 result.text={ \"args\": {}, \"headers\": { \"Accept\": \"*/*\", \"Accept-Encoding\": \"gzip\", \"Host\": \"httpbin.org\", \"User-Agent\": \"python-requests/2.19.1\" }, \"origin\": \"183.188.212.56, 183.188.212.56\", \"url\": \"https://httpbin.org/get\" } 查查这几个IP都是哪里的： 看起来效果不错。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:33 "},"proxy_common/bug_proxy/basic/free_trial.html":{"url":"proxy_common/bug_proxy/basic/free_trial.html","title":"免费试用","keywords":"","body":"免费试用 IP代理提供商 注册后 往往都有免费试用代理供测试比如： 蘑菇代理 - 购买API代理 您只需要注册我们的平台账号，成功注册后即可申请免费试用 私密API代理提供500个IP，1小时的测试时间;HTTP隧道代理提供10个并发，3小时的测试时间 甚至有些不注册，也提供少数的供测试的代理IP，比如： 国内高匿免费HTTP代理IP - 快代理 免费代理由第三方服务器提供，IP不确定性较大，总体质量不高。如需购买基于自营服务器的高质量IP产品，请联系客服开通测试订单 所以在确定买哪家代理之前，调研和对比期间，可以测试其试用代理效果如何，再做决定。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:47:09 "},"proxy_common/bug_proxy/company/":{"url":"proxy_common/bug_proxy/company/","title":"服务商","keywords":"","body":"服务商 接着介绍国内常见的具体的代理服务商，即卖代理的公司。 各家代理对比 如果想要大概了解每家代理效果如何，可以参考这里的测评对比。 下面列出对比结果供参考： crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 17:47:28 "},"proxy_common/bug_proxy/company/abuyun.html":{"url":"proxy_common/bug_proxy/company/abuyun.html","title":"阿布云代理","keywords":"","body":"阿布云代理 之前自己为了反扒，去买了阿布云的代理，实现了每次请求IP都不同的动态IP的效果，效果还不错。 阿布云代理 主页 HTTP隧道产品 https://www.abuyun.com/http-proxy/products.html 购买阿布云的HTTP隧道代理 HTTP隧道产品 | 阿布云 - 为大数据赋能 购买 HTTP隧道 动态版 服务说明 动态版HTTP隧道服务说明 | 阿布云 - 为大数据赋能 接入指南 动态版HTTP隧道接入指南 | 阿布云 - 为大数据赋能 Python HTTP隧道（动态版）Python 接入指南| 阿布云 - 为大数据赋能 先去注册，进入后台： 点击了 申请免费测试隧道 后： 即可申请到 免费测试时间：4个小时 的动态IP。 经过测试无误后，即可后续继续购买。 比如 购买1天的： 跳转到支付宝付款，成功付款后返回订单列表： 进入云隧道->HTTP代理，可看到已购产品列表： 得到了通行证书和通行密钥，就是用户名和密码，即可放在代码中使用。 账号过期 如果后续所购服务过期了仍继续调用接口，则会报错HTTP 402: Payment Required。 比如PySpider中的报错： [W 190502 10:04:59 tornado_fetcher:423] [402] DianpingChildrenEnglish:03d7573282446a107bf426f38e30f406 http://www.dianping.com/shop/98532606#221048_745240 0.06s [E 190502 10:04:59 processor:202] process DianpingChildrenEnglish:03d7573282446a107bf426f38e30f406 http://www.dianping.com/shop/98532606#221048_745240 -> [402] len:312 -> result:None fol:0 msg:0 err:HTTPError('HTTP 402: Payment Required',) 解决办法：重新续费，或者购买新服务，再去代码中换上新的通行证书和通行密钥，即可。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 17:43:25 "},"proxy_common/bug_proxy/company/dobel.html":{"url":"proxy_common/bug_proxy/company/dobel.html","title":"多贝云代理","keywords":"","body":"多贝云代理 之前也去用过 多贝云的HTTP代理 觉得也还可以。 下面记录购买和使用过程。 不同套餐对比 多贝云 套餐2：每一段时间内的请求，IP都是固定不变的 注： 套餐2的时间是7~10分钟 套餐1是1~2分钟 有效期过了后，会自动更换新IP的 无需手动更换 当然如果想要手动，主动，更换IP，也是支持的 详见：多贝云|动态IP代理拨号代理VPN代理动态HTTP代理 主动切换IP： 整个过程无需变更代理服务器和端口信息，而是通过调用API实现自动切换IP。应用程序通过HTTP隧道请求 http://ip.dobel.cn/switch-ip ，请求执行成功会返回一个新的IP地址及其剩余可用时长，后续的请求将都会通过新的出口IP地址进行转发 查看当前IP 请求 http://ip.dobel.cn/current-ip 能够获取到当前分配到出口IP以及剩余的可用时长信息。 举例 curl -x http-proxy-t2.dobel.cn:9180 -U ProxyUsername:ProxyPassword http://ip.dobel.cn/current-ip 返回： {\"wanip\":\"117.69.50.223\",\"resttime\":-215}% 套餐3：每次请求，IP都不同 才是我们希望的，动态IP 购买多贝云的HTTP代理 从 多贝云|动态IP代理拨号代理VPN代理动态HTTP代理 点击 套餐3 再去选择具体配置： 用支付宝支付后，返回订单： 返回 账号管理->http代理，即可看到已购产品： 把其中的账号和密码放在代码中，即可使用。 使用多贝云 关于如何在代码中使用多贝云代理，可以参考后续章节：PySpider中使用代理 用了一段时间后，还可以去看统计信息： 账号过期 如果账号过期了： 则（PySpider中）会出现： requests.exceptions.HTTPError: HTTP 407: Proxy Authentication Required 的错误： [E 190424 17:53:40 base_handler:203] HTTP 407: Proxy Authentication Required Traceback (most recent call last): File \"/Users/crifan/.local/share/virtualenvs/ crawler_xxx-sGcMRJTS/lib/python3.6/site-packages/pyspider/libs/base_handler.py\", line 196, in run_task result = self._run_task(task, response) File \"/Users/crifan/.local/share/virtualenvs/ crawler_xxx-sGcMRJTS/lib/python3.6/site-packages/pyspider/libs/base_handler.py\", line 175, in _run_task response.raise_for_status() File \"/Users/crifan/.local/share/virtualenvs/ crawler_xxx-sGcMRJTS/lib/python3.6/site-packages/pyspider/libs/response.py\", line 184, in raise_for_status raise http_error requests.exceptions.HTTPError: HTTP 407: Proxy Authentication Required crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 17:43:29 "},"add_proxy/":{"url":"add_proxy/","title":"如何添加代理","keywords":"","body":"如何添加代理 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:47 "},"add_proxy/program_language/":{"url":"add_proxy/program_language/","title":"编程语言","keywords":"","body":"编程语言 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:44 "},"add_proxy/program_language/python/":{"url":"add_proxy/program_language/python/","title":"Python","keywords":"","body":"Python crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:38 "},"add_proxy/program_language/python/requests.html":{"url":"add_proxy/program_language/python/requests.html","title":"requests","keywords":"","body":"requests python的网络库requests中加proxy代理 前提：确保自己的代理正常。比如此处的V2RayU中的代理： 代码： 此处给（调用WordPress的REST的api时的）网络请求加上代理： cfgProxies = { \"http\" : \"http://127.0.0.1:1087\", \"https\" : \"http://127.0.0.1:1087\", } resp = requests.post( createPostUrl, proxies=cfgProxies, headers=curHeaders, json=postDict, ) 即可。 PySpider中使用代理 爬虫框架PySpider内部用的是requests，其设置代理的方式，也就是和requests一样了。 PySpider中设置了全局的代理： ### dobel 多贝云 IP代理 #http代理接入服务器地址端口 ProxyHost = \"http-proxy-t3.dobel.cn\" ProxyPort = \"9180\" #账号密码 ProxyUser = \"YourUserName\" ProxyPass = \"YourPassword\" ProxyUri = \"http://%(user)s:%(pass)s@%(host)s:%(port)s\" % { \"host\" : ProxyHost, \"port\" : ProxyPort, \"user\" : ProxyUser, \"pass\" : ProxyPass, } class Handler(BaseHandler): crawl_config = { \"proxy\": ProxyUri, ... } 之后的self.crawl正常调用url，即可用上此处的代理了。 其中ProxyUri是这种： http://YourUserName:YourPassword@http-proxy-t3.dobel.cn:9180 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:41 "},"add_proxy/dev_tool/":{"url":"add_proxy/dev_tool/","title":"开发工具","keywords":"","body":"开发工具 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:53 "},"add_proxy/dev_tool/git.html":{"url":"add_proxy/dev_tool/git.html","title":"git","keywords":"","body":"git crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:44 "},"add_proxy/dev_tool/pip.html":{"url":"add_proxy/dev_tool/pip.html","title":"pip","keywords":"","body":"pip crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:50 "},"add_proxy/dev_tool/as.html":{"url":"add_proxy/dev_tool/as.html","title":"Android Studio","keywords":"","body":"Android Studio crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:40 "},"add_proxy/dev_tool/gradle.html":{"url":"add_proxy/dev_tool/gradle.html","title":"gradle","keywords":"","body":"gradle crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:47 "},"add_proxy/dev_tool/rsync.html":{"url":"add_proxy/dev_tool/rsync.html","title":"rsync","keywords":"","body":"rsync crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:56 "},"add_proxy/dev_tool/securecrt.html":{"url":"add_proxy/dev_tool/securecrt.html","title":"SecureCRT","keywords":"","body":"SecureCRT crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:44:59 "},"add_proxy/mobile/":{"url":"add_proxy/mobile/","title":"移动端","keywords":"","body":"移动端 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:45:11 "},"add_proxy/mobile/android.html":{"url":"add_proxy/mobile/android.html","title":"Android","keywords":"","body":"Android crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:45:03 "},"add_proxy/mobile/ios.html":{"url":"add_proxy/mobile/ios.html","title":"iOS","keywords":"","body":"iOS 下面介绍，如何在iOS的iPhone中，设置代理。 iPhone中给WiFi设置添加代理 从设置中： 点击对应的WiFi，进入无线局域网： 点击当前的WiFi，进入Wifi详情页。 默认是 HTTP代理->配置代理：关闭 点击配置代理，进入设置页： 点击 自动，并且输入对应的 服务器 和 端口： 再点击右上角的 存储，即可保存： 然后即可返回上一页，看到 配置代理 变成 手动： 即表示已手动设置好代理了。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:45:08 "},"add_proxy/pc/":{"url":"add_proxy/pc/","title":"桌面端","keywords":"","body":"桌面端 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:34 "},"add_proxy/pc/mac/":{"url":"add_proxy/pc/mac/","title":"Mac","keywords":"","body":"Mac crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:27 "},"add_proxy/pc/mac/brew.html":{"url":"add_proxy/pc/mac/brew.html","title":"brew","keywords":"","body":"brew crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:24 "},"add_proxy/pc/win/":{"url":"add_proxy/pc/win/","title":"Windows","keywords":"","body":"Windows crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:32 "},"add_proxy/pc/win/browser.html":{"url":"add_proxy/pc/win/browser.html","title":"浏览器","keywords":"","body":"浏览器 QQ浏览器 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:29 "},"appendix/":{"url":"appendix/","title":"附录","keywords":"","body":"附录 下面列出相关参考资料。 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:51 "},"appendix/reference.html":{"url":"appendix/reference.html","title":"参考资料","keywords":"","body":"参考资料 【已解决】小米9安卓手机中安装Charles证书：没有可用连接，因为代理服务器故障或其地址有误 【已解决】给Python的requests加上代理访问WordPress的REST的api 【已解决】iOS自动化安装app：给当前WiFi去掉代理以及自动安装app后再恢复之前代理 【整理】后续可能会用到的其他各家的IP代理 【记录】购买阿布云的每次请求IP都不同的动态IP代理 【已解决】用Python代码测试多贝云代理IP是否生效 【已解决】如何破解大众点评网页爬取时的反扒验证verify.meituan.com 【已解决】PySpider中使用多贝云IP代理池实现每次请求IP都不同 【已解决】购买多贝云IP代理池 【已解决】用Python代码测试多贝云代理IP是否生效 【已解决】找个好用的IP代理池实现防止大众点评网站的反扒 【已解决】搞懂IP代理池相关概念和逻辑 crifan.com，使用署名4.0国际(CC BY 4.0)协议发布 all right reserved，powered by Gitbook最后更新： 2020-12-28 22:46:56 "}}